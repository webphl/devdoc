openapi: 3.0.3
info:
  title: 'MetaFox APIs'
  description: "Version: v5.1.4\nUpdated: Jul 26, 2023"
  version: 1.0.0
servers:
  -
    url: 'https://demo.metafox.app/api/v1'
paths:
  /activitypoint/package:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: query
          name: q
          description: 'search text'
          example: null
          required: false
          schema:
            type: string
            description: 'search text'
            example: null
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: recent
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: integer
                  description: ''
                  example: null
  /activitypoint/package-transaction:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:24'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:24'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: recent
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: integer
                  description: ''
                  example: null
  '/activitypoint/package/purchase/{id}':
    post:
      summary: ''
      operationId: postActivitypointPackagePurchaseId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: integer
                  description: ''
                  example: null
              required:
                - payment_gateway
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase.'
        example: '19737086'
        required: true
        schema:
          type: string
  '/activitypoint/package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the package.'
        example: '5'
        required: true
        schema:
          type: string
  /activitypoint/setting:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: recent
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
  '/activitypoint/statistic/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '342261'
        required: true
        schema:
          type: string
  /activitypoint/transaction:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: ''
                  example: null
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:24'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:24'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_discussed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: integer
                  description: ''
                  example: null
  '/activitypoint/transaction/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '9997281'
        required: true
        schema:
          type: string
  /advertise/advertise:
    get:
      summary: ''
      operationId: getAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: ''
                  example: null
                end_date:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: ''
      operationId: postAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: null
                image:
                  type: object
                  description: ''
                  example: null
                  properties:
                    status:
                      type: string
                      description: 'This field is required when <code>image.temp_file</code> is present.'
                      example: null
                    temp_file:
                      type: number
                      description: 'This field is required when <code>image.id</code> is <code>0</code>.'
                      example: null
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://rice.com/optio-quis-sunt-non-enim-quidem-consequatur-ipsam-quis'
                image_tooltip:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: null
                html_title:
                  type: string
                  description: 'This field is required when <code>creation_type</code> is <code>html</code>. Must not be greater than 25 characters.'
                  example: null
                html_description:
                  type: string
                  description: 'Must not be greater than 135 characters.'
                  example: null
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: null
                total_click:
                  type: string
                  description: ''
                  example: null
                total_impression:
                  type: string
                  description: ''
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                is_active:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:24'
                end_date:
                  type: string
                  description: ''
                  example: null
                creation_type:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - placement_id
                - image
                - url
                - title
                - start_date
                - creation_type
      security: []
  '/advertise/advertise/active/{id}':
    patch:
      summary: ''
      operationId: patchAdvertiseAdvertiseActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '7'
        required: true
        schema:
          type: string
  '/advertise/advertise/hide/{id}':
    patch:
      summary: ''
      operationId: patchAdvertiseAdvertiseHideId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hide.'
        example: '79701'
        required: true
        schema:
          type: string
  '/advertise/advertise/report/{id}':
    get:
      summary: ''
      operationId: getAdvertiseAdvertiseReportId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_type:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                start_date_month:
                  type: string
                  description: ''
                  example: null
                end_date_month:
                  type: string
                  description: ''
                  example: null
                start_date_week:
                  type: string
                  description: ''
                  example: null
                end_date_week:
                  type: string
                  description: ''
                  example: null
                start_date_day:
                  type: string
                  description: ''
                  example: null
                end_date_day:
                  type: string
                  description: ''
                  example: null
              required:
                - report_type
                - view
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the report.'
        example: '41'
        required: true
        schema:
          type: string
  /advertise/advertise/show:
    get:
      summary: ''
      operationId: getAdvertiseAdvertiseShow
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: null
                location:
                  type: string
                  description: ''
                  example: null
              required:
                - placement_id
      security: []
  '/advertise/advertise/total/{id}':
    patch:
      summary: ''
      operationId: patchAdvertiseAdvertiseTotalId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: null
              required:
                - type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the total.'
        example: '6'
        required: true
        schema:
          type: string
  '/advertise/advertise/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: ''
      operationId: putAdvertiseAdvertiseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                age_to:
                  type: number
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the advertise.'
        example: '6900'
        required: true
        schema:
          type: string
  /advertise/invoice:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: null
                end_date:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  '/advertise/invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchAdvertiseInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '41'
        required: true
        schema:
          type: string
  /advertise/invoice/change:
    post:
      summary: ''
      operationId: postAdvertiseInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
      security: []
  /advertise/invoice/payment:
    post:
      summary: ''
      operationId: postAdvertiseInvoicePayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
      security: []
  /advertise/sponsor:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: null
                end_date:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:24'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: integer
                  description: ''
                  example: null
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: null
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
  '/advertise/sponsor/active/{id}':
    patch:
      summary: ''
      operationId: patchAdvertiseSponsorActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '846245865'
        required: true
        schema:
          type: string
  /advertise/sponsor/feed:
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:24'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: integer
                  description: ''
                  example: null
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: null
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
  '/advertise/sponsor/form/feed/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getAdvertiseSponsorFormFeedItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: itemType
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/advertise/sponsor/form/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getAdvertiseSponsorFormItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: itemType
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/advertise/sponsor/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '730'
        required: true
        schema:
          type: string
  /sponsor/total/click:
    post:
      summary: ''
      operationId: postSponsorTotalClick
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: null
                item_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
  /sponsor/total/view:
    post:
      summary: ''
      operationId: postSponsorTotalView
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: null
                item_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
  /announcement:
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
  /announcement/view:
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: announcement_id
          description: ''
          example: null
          required: true
          schema:
            type: number
            description: ''
            example: null
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    post:
      summary: 'Hide announcement.'
      operationId: hideAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                announcement_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
              required:
                - announcement_id
  '/announcement/{id}':
    get:
      summary: 'View announcement.'
      operationId: viewAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the announcement.'
        example: '0000'
        required: true
        schema:
          type: string
  /attachment:
    post:
      summary: 'Upload attachment.'
      operationId: uploadAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: null
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 8192 kilobytes.'
                item_type:
                  type: string
                  description: ''
                  example: null
                upload_type:
                  type: string
                  description: ''
                  example: null
              required:
                - file
                - item_type
      security: []
  '/attachment/download/{id}':
    get:
      summary: 'Allow downloading resource.'
      operationId: allowDownloadingResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '32'
        required: true
        schema:
          type: string
  /authorization/device:
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  description: ''
                  example: null
                device_id:
                  type: string
                  description: ''
                  example: null
                device_uid:
                  type: string
                  description: ''
                  example: null
                token_source:
                  type: string
                  description: ''
                  example: null
                platform:
                  type: string
                  description: ''
                  example: null
                platform_version:
                  type: string
                  description: ''
                  example: null
                extra:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - device_token
                - device_id
                - token_source
      security: []
  /blog:
    get:
      summary: 'Browse blog.'
      operationId: browseBlog
      description: ''
      parameters:
        -
          in: query
          name: q
          description: ''
          example: null
          required: false
          schema:
            type: string
            description: ''
            example: null
        -
          in: query
          name: view
          description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
          example: sponsor
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
            example: sponsor
        -
          in: query
          name: sort
          description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
          example: most_liked
          required: false
          schema:
            type: string
            description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
            example: most_liked
        -
          in: query
          name: sort_type
          description: 'Must be one of <code>desc</code> or <code>asc</code>.'
          example: desc
          required: false
          schema:
            type: string
            description: 'Must be one of <code>desc</code> or <code>asc</code>.'
            example: desc
        -
          in: query
          name: when
          description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
          example: all
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
            example: all
        -
          in: query
          name: category_id
          description: ''
          example: null
          required: false
          schema:
            type: integer
            description: ''
            example: null
        -
          in: query
          name: user_id
          description: 'The profile id to filter.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'The profile id to filter.'
            example: 0
        -
          in: query
          name: owner_id
          description: ''
          example: null
          required: false
          schema:
            type: integer
            description: ''
            example: null
        -
          in: query
          name: page
          description: 'Must be at least 1.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Must be at least 1.'
            example: null
        -
          in: query
          name: limit
          description: ''
          example: null
          required: false
          schema:
            type: integer
            description: ''
            example: null
        -
          in: query
          name: is_featured
          description: ''
          example: null
          required: false
          schema:
            type: string
            description: ''
            example: null
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    post:
      summary: 'Create blog.'
      operationId: createBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: null
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                text:
                  type: string
                  description: ''
                  example: null
                draft:
                  type: number
                  description: ''
                  example: null
                tags:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                privacy:
                  type: string
                  description: ''
                  example: null
                captcha:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - title
                - text
                - privacy
  /blog-category:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  '/blog/approve/{id}':
    patch:
      summary: 'Approve blog.'
      operationId: approveBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '48694'
        required: true
        schema:
          type: string
  '/blog/feature/{id}':
    patch:
      summary: 'Feature blog.'
      operationId: featureBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '5'
        required: true
        schema:
          type: string
  /blog/form:
    get:
      summary: ''
      operationId: getBlogForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: null
  '/blog/form/{id}':
    get:
      summary: ''
      operationId: getBlogFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '7'
        required: true
        schema:
          type: string
  '/blog/publish/{id}':
    patch:
      summary: 'Publish blog.'
      operationId: publishBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the publish.'
        example: '02'
        required: true
        schema:
          type: string
  /blog/search-form:
    get:
      summary: 'Get search form.'
      operationId: getSearchForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
  '/blog/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor blog in feed.'
      operationId: sponsorBlogInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '9'
        required: true
        schema:
          type: string
  '/blog/sponsor/{id}':
    patch:
      summary: 'Sponsor blog.'
      operationId: sponsorBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '0'
        required: true
        schema:
          type: string
  '/blog/{id}':
    get:
      summary: 'View Blog.'
      operationId: viewBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    put:
      summary: 'Update blog.'
      operationId: updateBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: null
                categories:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - null
                  items:
                    type: integer
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: null
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                text:
                  type: string
                  description: ''
                  example: null
                tags:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                draft:
                  type: number
                  description: ''
                  example: null
                published:
                  type: boolean
                  description: ''
                  example: false
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
    delete:
      summary: 'Delete blog.'
      operationId: deleteBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the blog.'
        example: '1'
        required: true
        schema:
          type: string
  /captcha/verify:
    post:
      summary: ''
      operationId: postCaptchaVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Captcha
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                action_name:
                  type: string
                  description: ''
                  example: null
                captcha:
                  type: string
                  description: ''
                  example: null
      security: []
  /image-captcha/refresh:
    post:
      summary: ''
      operationId: postImageCaptchaRefresh
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Captcha
      security: []
  /chat:
    get:
      summary: ''
      operationId: getChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                room_id:
                  type: number
                  description: ''
                  example: null
                last_message_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: integer
                  description: ''
                  example: null
      security: []
    post:
      summary: ''
      operationId: postChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_id:
                  type: number
                  description: ''
                  example: null
                message:
                  type: string
                  description: ''
                  example: null
                type:
                  type: string
                  description: ''
                  example: null
                reply_id:
                  type: integer
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
      security: []
  /chat-room:
    get:
      summary: ''
      operationId: getChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: integer
                  description: ''
                  example: null
      security: []
    post:
      summary: ''
      operationId: postChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                member_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
      security: []
  /chat-room/addForm:
    get:
      summary: ''
      operationId: getChatRoomAddForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
  /chat-room/mark-all-read:
    put:
      summary: ''
      operationId: putChatRoomMarkAllRead
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
      security: []
  '/chat-room/mark-read/{id}':
    put:
      summary: ''
      operationId: putChatRoomMarkReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the mark read.'
        example: '22'
        required: true
        schema:
          type: string
  '/chat-room/{id}':
    get:
      summary: ''
      operationId: getChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    delete:
      summary: ''
      operationId: deleteChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the chat room.'
        example: '442'
        required: true
        schema:
          type: string
  '/chat/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '3'
        required: true
        schema:
          type: string
  '/chat/react/{id}':
    put:
      summary: ''
      operationId: putChatReactId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                react:
                  type: string
                  description: ''
                  example: null
                remove:
                  type: boolean
                  description: ''
                  example: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the react.'
        example: '812'
        required: true
        schema:
          type: string
  '/chat/remove/{id}':
    put:
      summary: ''
      operationId: putChatRemoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the remove.'
        example: '6842068'
        required: true
        schema:
          type: string
  '/chat/{id}':
    get:
      summary: ''
      operationId: getChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    put:
      summary: ''
      operationId: putChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: null
                type:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the chat.'
        example: '2'
        required: true
        schema:
          type: string
  '/chatplus/can-create-direct-message/{type}/{id_from}/{id_to}':
    get:
      summary: ''
      operationId: getChatplusCanCreateDirectMessageTypeId_fromId_to
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: type
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: id_from
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: id_to
        description: ''
        example: null
        required: true
        schema:
          type: string
  /chatplus/export-users:
    get:
      summary: ''
      operationId: getChatplusExportUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
  /chatplus/jobs:
    get:
      summary: ''
      operationId: getChatplusJobs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
  /chatplus/me:
    get:
      summary: ''
      operationId: getChatplusMe
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
  /chatplus/prefetch-users:
    get:
      summary: ''
      operationId: getChatplusPrefetchUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
  '/chatplus/rooms/upload/{room_id}':
    post:
      summary: ''
      operationId: postChatplusRoomsUploadRoom_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ''
                  example: null
                roomId:
                  type: string
                  description: ''
                  example: null
                token:
                  type: string
                  description: ''
                  example: null
                msg:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - userId
                - roomId
                - token
                - file
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: null
        required: true
        schema:
          type: string
  /chatplus/settings:
    get:
      summary: ''
      operationId: getChatplusSettings
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
  /chatplus/spotlight:
    get:
      summary: ''
      operationId: getChatplusSpotlight
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
  '/chatplus/user/{type}/{query}':
    get:
      summary: ''
      operationId: getChatplusUserTypeQuery
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: type
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: query
        description: ''
        example: null
        required: true
        schema:
          type: string
  /comment:
    get:
      summary: 'Browse comments.'
      operationId: browseComments
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                last_id:
                  type: number
                  description: ''
                  example: null
                excludes:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
    post:
      summary: 'Create comment.'
      operationId: createComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: 'This field is required when none of <code>photo_id</code> and <code>sticker_id</code> are present.'
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
                photo_id:
                  type: number
                  description: ''
                  example: null
                sticker_id:
                  type: number
                  description: ''
                  example: null
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  /comment-lists:
    get:
      summary: ''
      operationId: getCommentLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                last_id:
                  type: number
                  description: ''
                  example: null
                excludes:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  '/comment/download/{id}':
    get:
      summary: ''
      operationId: getCommentDownloadId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '2'
        required: true
        schema:
          type: string
  /comment/hide:
    post:
      summary: ''
      operationId: postCommentHide
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: number
                  description: ''
                  example: null
                is_hidden:
                  type: string
                  description: ''
                  example: null
                is_global:
                  type: string
                  description: ''
                  example: null
              required:
                - comment_id
                - is_hidden
  '/comment/history-edit/{id}':
    get:
      summary: ''
      operationId: getCommentHistoryEditId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the history edit.'
        example: '2'
        required: true
        schema:
          type: string
  '/comment/preview/{id}':
    get:
      summary: ''
      operationId: getCommentPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: '241'
        required: true
        schema:
          type: string
  /comment/related-comment:
    get:
      summary: ''
      operationId: getCommentRelatedComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                last_id:
                  type: number
                  description: ''
                  example: null
                excludes:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  '/comment/{id}':
    get:
      summary: 'View comment.'
      operationId: viewComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    put:
      summary: 'Update comment.'
      operationId: updateComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: null
                photo_id:
                  type: string
                  description: ''
                  example: null
                is_hide:
                  type: number
                  description: ''
                  example: null
                sticker_id:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Remove comment.'
      operationId: removeComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '6'
        required: true
        schema:
          type: string
  '/comment/{id}/remove-preview':
    patch:
      summary: ''
      operationId: patchCommentIdRemovePreview
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '2383272'
        required: true
        schema:
          type: string
  /contact:
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ''
                  example: null
                full_name:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: null
                subject:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: null
                email:
                  type: string
                  description: 'Must be a valid email address. Must be between 1 and 255 characters.'
                  example: null
                message:
                  type: string
                  description: ''
                  example: null
                send_copy:
                  type: integer
                  description: ''
                  example: null
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - category_id
                - full_name
                - subject
                - email
                - message
      security: []
  '/core/admin/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /core/custom-privacy-option:
    get:
      summary: ''
      operationId: getCoreCustomPrivacyOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
      security: []
    post:
      summary: ''
      operationId: postCoreCustomPrivacyOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: null
              required:
                - name
      security: []
  /core/custom-privacy-option/form:
    get:
      summary: ''
      operationId: getCoreCustomPrivacyOptionForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
  '/core/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getCoreFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: formName
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '21'
  /core/mobile/action-settings:
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
  /core/mobile/app-settings:
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
  '/core/mobile/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getCoreMobileFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: formName
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '3'
  '/core/mobile/settings/{revision}':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /core/package/build/callback:
    get:
      summary: ''
      operationId: getCorePackageBuildCallback
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildId:
                  type: string
                  description: ''
                  example: null
              required:
                - buildId
      security: []
  /core/status:
    get:
      summary: 'View user badge status.'
      operationId: viewUserBadgeStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
  '/core/translation/{group}/{lang}/{revision}':
    get:
      summary: ''
      operationId: getCoreTranslationGroupLangRevision
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: lang
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /core/url-to-route:
    get:
      summary: 'Get canonical URL.'
      operationId: getCanonicalURL
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ''
                  example: null
              required:
                - url
      security: []
  /core/web/action-settings:
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
  /core/web/app-settings:
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
  '/core/web/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /file:
    post:
      summary: 'Upload single.'
      operationId: uploadSingle
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: null
                file:
                  type: string
                  description: ''
                  example: null
                file_type:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                base64:
                  type: string
                  description: ''
                  example: null
              required:
                - file
  /files:
    post:
      summary: 'Upload multiple file.'
      operationId: uploadMultipleFile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: null
                0:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                upload_type:
                  type: string
                  description: ''
                  example: null
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                file:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
              required:
                - file
  /link/fetch:
    post:
      summary: 'View link.'
      operationId: viewLink
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: ''
                  example: null
              required:
                - link
      security: []
  /event:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                event_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                where:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: null
                lat:
                  type: number
                  description: ''
                  example: null
                lng:
                  type: number
                  description: ''
                  example: null
                radius:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                is_online:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
                bounds_west:
                  type: number
                  description: ''
                  example: null
                bounds_east:
                  type: number
                  description: ''
                  example: null
                bounds_south:
                  type: number
                  description: ''
                  example: null
                bounds_north:
                  type: number
                  description: ''
                  example: null
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    file_type:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: null
                is_online:
                  type: number
                  description: ''
                  example: null
                event_url:
                  type: string
                  description: 'This field is required when <code>is_online</code> is <code>1</code>.  Must be a valid URL.'
                  example: 'https://boyer.net/fugiat-iste-deserunt-ab-est-totam.html'
                start_time:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>end_time</code>.'
                  example: '2020-07-20'
                end_time:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_time</code>.'
                  example: '2082-07-17'
                location:
                  type: object
                  description: 'This field is required when <code>is_online</code> is <code>0</code>.'
                  example: null
                  properties: []
                privacy:
                  type: string
                  description: ''
                  example: null
                host:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - name
                - is_online
                - start_time
                - end_time
                - privacy
  /event-category:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
  /event-code:
    post:
      summary: ''
      operationId: postEventCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                refresh:
                  type: integer
                  description: ''
                  example: null
              required:
                - event_id
  '/event-code/accept/{code}':
    post:
      summary: ''
      operationId: postEventCodeAcceptCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: code
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/event-code/verify/{code}':
    get:
      summary: ''
      operationId: getEventCodeVerifyCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: code
        description: ''
        example: null
        required: true
        schema:
          type: string
  /event-host-invite:
    put:
      summary: ''
      operationId: putEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                accept:
                  type: number
                  description: ''
                  example: null
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: string
                  description: ''
                  example: null
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - event_id
  /event-invite:
    put:
      summary: ''
      operationId: putEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                accept:
                  type: number
                  description: ''
                  example: null
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: string
                  description: ''
                  example: null
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - event_id
  /event-member:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                event_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                invite_code:
                  type: string
                  description: ''
                  example: null
              required:
                - event_id
  /event-member/host:
    delete:
      summary: ''
      operationId: deleteEventMemberHost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - event_id
                - user_id
  '/event-member/interest/{id}':
    put:
      summary: ''
      operationId: putEventMemberInterestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest:
                  type: number
                  description: ''
                  example: null
                invite_code:
                  type: string
                  description: ''
                  example: null
              required:
                - interest
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the interest.'
        example: '7'
        required: true
        schema:
          type: string
  /event-member/member:
    delete:
      summary: ''
      operationId: deleteEventMemberMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - event_id
                - user_id
  '/event-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event member.'
        example: '1'
        required: true
        schema:
          type: string
  '/event/approve/{id}':
    patch:
      summary: ''
      operationId: patchEventApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '98'
        required: true
        schema:
          type: string
  '/event/feature/{id}':
    patch:
      summary: ''
      operationId: patchEventFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '596'
        required: true
        schema:
          type: string
  '/event/setting/form/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '9048'
        required: true
        schema:
          type: string
  '/event/setting/{id}':
    put:
      summary: ''
      operationId: putEventSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: null
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: '1'
        required: true
        schema:
          type: string
  '/event/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor event in feed.'
      operationId: sponsorEventInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '0930'
        required: true
        schema:
          type: string
  '/event/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchEventSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '23435'
        required: true
        schema:
          type: string
  '/event/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '114'
        required: true
        schema:
          type: string
  '/event/{id}/mass-email':
    post:
      summary: ''
      operationId: postEventIdMassEmail
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '346123'
        required: true
        schema:
          type: string
  '/event/{id}/stats':
    get:
      summary: ''
      operationId: getEventIdStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '38'
        required: true
        schema:
          type: string
  /feed:
    get:
      summary: 'Browse feed item.'
      operationId: browseFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                hashtag:
                  type: string
                  description: ''
                  example: null
                last_feed_id:
                  type: number
                  description: ''
                  example: null
                related_comment_friend_only:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
                view:
                  type: string
                  description: ''
                  example: null
                from:
                  type: string
                  description: ''
                  example: null
                type_id:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                is_preview_tag:
                  type: string
                  description: ''
                  example: null
                has_pin_post:
                  type: string
                  description: ''
                  example: null
                sponsored_feed_ids:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - null
                  items:
                    type: integer
    post:
      summary: 'Create feed.'
      operationId: createFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                parent_item_id:
                  type: string
                  description: ''
                  example: null
                post_as_parent:
                  type: string
                  description: ''
                  example: null
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: null
                    lat:
                      type: number
                      description: ''
                      example: null
                    lng:
                      type: number
                      description: ''
                      example: null
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: null
                      px:
                        type: number
                        description: ''
                        example: null
                      py:
                        type: number
                        description: ''
                        example: null
              required:
                - post_type
  '/feed/allow-preview/{id}':
    patch:
      summary: ''
      operationId: patchFeedAllowPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_allowed:
                  type: string
                  description: ''
                  example: null
              required:
                - is_allowed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the allow preview.'
        example: '3'
        required: true
        schema:
          type: string
  '/feed/approve/{id}':
    patch:
      summary: 'Approve pending post.'
      operationId: approvePendingPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '0'
        required: true
        schema:
          type: string
  '/feed/archive/{id}':
    patch:
      summary: ''
      operationId: patchFeedArchiveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the archive.'
        example: '0'
        required: true
        schema:
          type: string
  /feed/check-new:
    get:
      summary: ''
      operationId: getFeedCheckNew
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_feed_id:
                  type: number
                  description: ''
                  example: null
                last_pin_feed_id:
                  type: number
                  description: ''
                  example: null
                last_sponsored_feed_id:
                  type: number
                  description: ''
                  example: null
  /feed/create:
    get:
      summary: 'hot fix because of /api/v1/feed/create crashed.'
      operationId: hotFixBecauseOfapiv1feedcreateCrashed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
  '/feed/decline/{id}':
    patch:
      summary: ''
      operationId: patchFeedDeclineId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_block_author:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the decline.'
        example: '886017'
        required: true
        schema:
          type: string
  '/feed/edit/{id}':
    get:
      summary: 'Get status for edit.'
      operationId: getStatusForEdit
      description: 'GET: feed/edit/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: '5'
        required: true
        schema:
          type: string
  /feed/hidden:
    get:
      summary: 'Browse snooze.'
      operationId: browseSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                type:
                  type: string
                  description: 'Must be one of <code>friend</code>, <code>page</code>, or <code>group</code>.'
                  example: group
                q:
                  type: string
                  description: ''
                  example: null
  '/feed/hidden/{id}':
    delete:
      summary: 'Remove snooze.'
      operationId: removeSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hidden.'
        example: '716631'
        required: true
        schema:
          type: string
  '/feed/hide-all/{id}':
    post:
      summary: 'Hide a user.'
      operationId: hideAUser
      description: 'POST: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'UnHide a user.'
      operationId: unHideAUser
      description: 'DELETE: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hide all.'
        example: '27267'
        required: true
        schema:
          type: string
  '/feed/hide-feed/{id}':
    post:
      summary: 'Hide a feed.'
      operationId: hideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Hide a feed.'
      operationId: unHideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hide feed.'
        example: '3912570'
        required: true
        schema:
          type: string
  '/feed/history/{id}':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the history.'
        example: '69'
        required: true
        schema:
          type: string
  '/feed/pin/{id}':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: null
              required:
                - owner_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '160'
        required: true
        schema:
          type: string
  '/feed/pin/{id}/home':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '1907'
        required: true
        schema:
          type: string
  /feed/post-type:
    get:
      summary: 'Get post types.'
      operationId: getPostTypes
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
  '/feed/privacy/{id}':
    patch:
      summary: 'Update feed privacy.'
      operationId: updateFeedPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - privacy
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '2322'
        required: true
        schema:
          type: string
  /feed/share:
    post:
      summary: 'Share feed item.'
      operationId: shareFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_status:
                  type: string
                  description: ''
                  example: null
                post_type:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                type_id:
                  type: string
                  description: ''
                  example: null
                post_content:
                  type: string
                  description: ''
                  example: null
                parent_feed_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: null
                    lat:
                      type: number
                      description: ''
                      example: null
                    lng:
                      type: number
                      description: ''
                      example: null
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: null
                      px:
                        type: number
                        description: ''
                        example: null
                      py:
                        type: number
                        description: ''
                        example: null
              required:
                - item_id
                - item_type
  /feed/share/form:
    get:
      summary: 'View share form.'
      operationId: viewShareForm
      description: 'GET: feed/share/form'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
  '/feed/snooze/{id}':
    post:
      summary: 'Snooze a user.'
      operationId: snoozeAUser
      description: 'POST: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Snooze a user.'
      operationId: unSnoozeAUser
      description: 'DELETE: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the snooze.'
        example: '4'
        required: true
        schema:
          type: string
  '/feed/tag/{id}':
    delete:
      summary: 'Remove tag.'
      operationId: removeTag
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: '5'
        required: true
        schema:
          type: string
  /feed/tagged-friend:
    get:
      summary: 'Get tagged friends.'
      operationId: getTaggedFriends
      description: 'GET: /feed/tagged-friend'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  '/feed/unpin/{id}':
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/unpin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: null
              required:
                - owner_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the unpin.'
        example: '93'
        required: true
        schema:
          type: string
  '/feed/{id}':
    get:
      summary: 'View feed item.'
      operationId: viewFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    put:
      summary: 'Update feed item.'
      operationId: updateFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                parent_item_id:
                  type: integer
                  description: ''
                  example: null
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: null
                    lat:
                      type: number
                      description: ''
                      example: null
                    lng:
                      type: number
                      description: ''
                      example: null
                tagged_friends:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: null
                      px:
                        type: number
                        description: ''
                        example: null
                      py:
                        type: number
                        description: ''
                        example: null
              required:
                - post_type
    delete:
      summary: 'Delete feed item.'
      operationId: deleteFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feed.'
        example: '9'
        required: true
        schema:
          type: string
  /follow:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>following</code>.'
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - user_id
      security: []
  '/follow/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the follow.'
        example: '0'
        required: true
        schema:
          type: string
  /forum:
    get:
      summary: ''
      operationId: getForum
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                forum_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
      security: []
  /forum-post:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                thread_id:
                  type: number
                  description: ''
                  example: null
                post_id:
                  type: number
                  description: ''
                  example: null
                forum_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - thread_id
                - text
      security: []
  '/forum-post/approve/{id}':
    patch:
      summary: ''
      operationId: patchForumPostApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '56115'
        required: true
        schema:
          type: string
  '/forum-post/form/{id}':
    get:
      summary: ''
      operationId: getForumPostFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: null
                thread_id:
                  type: number
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '69292'
  /forum-post/posters:
    get:
      summary: ''
      operationId: getForumPostPosters
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: string
                  description: ''
                  example: null
              required:
                - thread_id
      security: []
  /forum-post/quote:
    post:
      summary: ''
      operationId: postForumPostQuote
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote_id:
                  type: number
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - quote_id
                - text
      security: []
  '/forum-post/quote/form/{id}':
    get:
      summary: ''
      operationId: getForumPostQuoteFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '6'
        required: true
        schema:
          type: string
  '/forum-post/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the forum post.'
        example: '0'
        required: true
        schema:
          type: string
  '/forum-subs/{id}':
    get:
      summary: ''
      operationId: getForumSubsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the forum sub.'
        example: '68'
        required: true
        schema:
          type: string
  /forum-thread:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                forum_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  '/forum-thread/approve/{id}':
    patch:
      summary: ''
      operationId: patchForumThreadApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '8185'
        required: true
        schema:
          type: string
  '/forum-thread/close/{id}':
    patch:
      summary: ''
      operationId: patchForumThreadCloseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_closed:
                  type: string
                  description: ''
                  example: null
              required:
                - is_closed
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the close.'
        example: '46'
        required: true
        schema:
          type: string
  /forum-thread/copy:
    post:
      summary: ''
      operationId: postForumThreadCopy
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: null
                title:
                  type: string
                  description: 'Must be between  3 and 155 characters.'
                  example: null
                thread_id:
                  type: number
                  description: ''
                  example: null
              required:
                - forum_id
                - title
                - thread_id
      security: []
  '/forum-thread/copy/form/{id}':
    get:
      summary: ''
      operationId: getForumThreadCopyFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '756'
        required: true
        schema:
          type: string
  '/forum-thread/last-read/{id}':
    patch:
      summary: ''
      operationId: patchForumThreadLastReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
              required:
                - post_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the last read.'
        example: '9'
        required: true
        schema:
          type: string
  /forum-thread/merge:
    post:
      summary: ''
      operationId: postForumThreadMerge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: null
                current_thread_id:
                  type: number
                  description: ''
                  example: null
                merged_thread_id:
                  type: number
                  description: ''
                  example: null
              required:
                - forum_id
                - current_thread_id
                - merged_thread_id
      security: []
  '/forum-thread/merge/form/{id}':
    get:
      summary: ''
      operationId: getForumThreadMergeFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '19'
        required: true
        schema:
          type: string
  '/forum-thread/move/form/{id}':
    get:
      summary: ''
      operationId: getForumThreadMoveFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '0'
        required: true
        schema:
          type: string
  '/forum-thread/move/{id}':
    patch:
      summary: ''
      operationId: patchForumThreadMoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: null
              required:
                - forum_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the move.'
        example: '8'
        required: true
        schema:
          type: string
  '/forum-thread/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor thread in feed.'
      operationId: sponsorThreadInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '7'
        required: true
        schema:
          type: string
  '/forum-thread/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchForumThreadSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '368'
        required: true
        schema:
          type: string
  '/forum-thread/stick/{id}':
    patch:
      summary: ''
      operationId: patchForumThreadStickId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_sticked:
                  type: string
                  description: ''
                  example: null
              required:
                - is_sticked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the stick.'
        example: '708'
        required: true
        schema:
          type: string
  '/forum-thread/subscribe/{id}':
    patch:
      summary: ''
      operationId: patchForumThreadSubscribeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_subscribed:
                  type: string
                  description: ''
                  example: null
              required:
                - is_subscribed
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscribe.'
        example: '468598'
        required: true
        schema:
          type: string
  /forum-thread/suggestion-search:
    get:
      summary: ''
      operationId: getForumThreadSuggestionSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                forum_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                exclude_thread_ids:
                  type: string
                  description: ''
                  example: null
      security: []
  '/forum-thread/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the forum thread.'
        example: '809'
        required: true
        schema:
          type: string
  /forum/option:
    get:
      summary: ''
      operationId: getForumOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                forum_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
      security: []
  /friend:
    get:
      summary: 'Browse friends.'
      operationId: browseFriends
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: friend
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                list_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
  /friend/birthday:
    get:
      summary: 'Get birthday.'
      operationId: getBirthday
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /friend/invite-to-item:
    get:
      summary: ''
      operationId: getFriendInviteToItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
              required:
                - owner_id
                - item_type
                - item_id
  /friend/invite-to-owner:
    get:
      summary: 'Invite friend.'
      operationId: inviteFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                privacy_type:
                  type: string
                  description: ''
                  example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
              required:
                - privacy_type
                - owner_id
  /friend/list:
    get:
      summary: 'Browse friend lists.'
      operationId: browseFriendLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
    post:
      summary: 'Create friend list.'
      operationId: createFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: null
              required:
                - name
  '/friend/list/add-friend/{id}':
    post:
      summary: 'Add friend list.'
      operationId: addFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    put:
      summary: ''
      operationId: putFriendListAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '2'
        required: true
        schema:
          type: string
  '/friend/list/assign/{id}':
    get:
      summary: 'Assign friend to list.'
      operationId: assignFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    post:
      summary: 'Assign multiple friend to list.'
      operationId: assignMultipleFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the assign.'
        example: '009'
        required: true
        schema:
          type: string
  /friend/list/create:
    get:
      summary: ''
      operationId: getFriendListCreate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
  '/friend/list/delete-friend/{id}':
    delete:
      summary: 'Delete friend from list.'
      operationId: deleteFriendFromList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the delete friend.'
        example: '6'
        required: true
        schema:
          type: string
  '/friend/list/{id}':
    get:
      summary: 'View friend list.'
      operationId: viewFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    put:
      summary: 'Update friend list.'
      operationId: updateFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 60 characters.'
                  example: null
              required:
                - name
    delete:
      summary: 'Remove friend list.'
      operationId: removeFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the list.'
        example: '6848'
        required: true
        schema:
          type: string
  '/friend/list/{list}/edit':
    get:
      summary: ''
      operationId: getFriendListListEdit
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: list
        description: 'The list.'
        example: null
        required: true
        schema:
          type: string
  /friend/mention:
    get:
      summary: 'Load mentions.'
      operationId: loadMentions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: friend
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                list_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
  /friend/request:
    get:
      summary: 'Browse friend request.'
      operationId: browseFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
    post:
      summary: 'Create friend request.'
      operationId: createFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friend_user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - friend_user_id
  /friend/request/markAllAsRead:
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
  '/friend/request/{id}':
    put:
      summary: 'Update friend request.'
      operationId: updateFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: null
              required:
                - action
    delete:
      summary: 'Remove friend request.'
      operationId: removeFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '41'
        required: true
        schema:
          type: string
  /friend/suggestion:
    get:
      summary: 'Load suggestion.'
      operationId: loadSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /friend/suggestion/hide-user:
    post:
      summary: 'Hide user suggestions.'
      operationId: hideUserSuggestions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - user_id
  /friend/tag-suggestion:
    get:
      summary: 'Load friend suggestion for tagging.'
      operationId: loadFriendSuggestionForTagging
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                excluded_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
  '/friend/{id}':
    delete:
      summary: 'Remove friend.'
      operationId: removeFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the friend.'
        example: '17'
        required: true
        schema:
          type: string
  /group:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                type_id:
                  type: number
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                reg_method:
                  type: number
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                users:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - name
                - reg_method
  /group-announcement:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - group_id
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - group_id
      security: []
  /group-announcement/hide:
    post:
      summary: ''
      operationId: postGroupAnnouncementHide
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                ann_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - ann_id
      security: []
  /group-block:
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
      security: []
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                delete_activities:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
      security: []
  '/group-block/{id}':
    get:
      summary: 'View item'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    put:
      summary: 'Update item'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    delete:
      summary: 'Delete item'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                delete_activities:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group block.'
        example: '4'
        required: true
        schema:
          type: string
  '/group-info/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group info.'
        example: '159'
        required: true
        schema:
          type: string
  /group-integrated/order:
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - group_id
      security: []
  '/group-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group integrated.'
        example: '11232'
        required: true
        schema:
          type: string
  /group-invite:
    get:
      summary: 'Browse group invitation.'
      operationId: browseGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
    post:
      summary: 'Store group invitation.'
      operationId: storeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - group_id
                - user_ids
    put:
      summary: 'Update group invitation.'
      operationId: updateGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                invite_code:
                  type: string
                  description: ''
                  example: null
                accept:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - accept
    delete:
      summary: 'Remove group invitation.'
      operationId: removeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: string
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
  /group-member:
    get:
      summary: 'Browse group members.'
      operationId: browseGroupMembers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                not_invite_role:
                  type: number
                  description: ''
                  example: null
                excluded_user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
    post:
      summary: 'Create group member.'
      operationId: createGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
  /group-member/add-group-admin:
    post:
      summary: 'Add group admin.'
      operationId: addGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - group_id
                - user_ids
  /group-member/add-group-moderator:
    post:
      summary: 'Add group moderators.'
      operationId: addGroupModerators
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - group_id
                - user_ids
  /group-member/cancel-invite:
    delete:
      summary: ''
      operationId: deleteGroupMemberCancelInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                invite_type:
                  type: string
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
  /group-member/change-to-moderator:
    put:
      summary: 'Change to moderator.'
      operationId: changeToModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
  /group-member/reassign-owner:
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: null
                users:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - group_id
  /group-member/remove-group-admin:
    delete:
      summary: 'Remove group admin.'
      operationId: removeGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                is_delete:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
                - is_delete
  /group-member/remove-group-member:
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                delete_activities:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
  /group-member/remove-group-moderator:
    delete:
      summary: 'Remove group moderator.'
      operationId: removeGroupModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                is_delete:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
                - is_delete
  '/group-member/{id}':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
                reassign_owner_id:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group member.'
        example: '9'
        required: true
        schema:
          type: string
  /group-mute:
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
      security: []
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                expired_at:
                  type: string
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
      security: []
  '/group-mute/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group mute.'
        example: '6'
        required: true
        schema:
          type: string
  /group-question:
    get:
      summary: 'Browse Question.'
      operationId: browseQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
    post:
      summary: 'Store a question.'
      operationId: storeAQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                question:
                  type: string
                  description: ''
                  example: null
                type_id:
                  type: number
                  description: ''
                  example: null
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - null
                  items:
                    type: string
              required:
                - group_id
                - question
                - type_id
  '/group-question/answer-form/{id}':
    get:
      summary: 'Get answer form.'
      operationId: getAnswerForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the answer form.'
        example: '481'
        required: true
        schema:
          type: string
  '/group-question/form/{id}':
    get:
      summary: 'Get creation form.'
      operationId: getCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '052'
  '/group-question/{id}':
    put:
      summary: 'Update question.'
      operationId: updateQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: ''
                  example: null
                type_id:
                  type: number
                  description: ''
                  example: null
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - null
                  items:
                    type: number
    delete:
      summary: 'Remove question.'
      operationId: removeQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group question.'
        example: '2'
        required: true
        schema:
          type: string
  /group-request:
    get:
      summary: 'Browse member requests in a group.'
      operationId: browseMemberRequestsInAGroup
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
  /group-request/accept-request:
    put:
      summary: 'Accept member request.'
      operationId: acceptMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
  '/group-request/cancel-request/{id}':
    delete:
      summary: 'Cancel a member request.'
      operationId: cancelAMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel request.'
        example: '04'
        required: true
        schema:
          type: string
  /group-request/deny-request:
    delete:
      summary: 'Deny member request.'
      operationId: denyMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
  /group-rule:
    get:
      summary: 'Browse group rules.'
      operationId: browseGroupRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
    post:
      summary: 'Create group rule.'
      operationId: createGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: null
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: null
              required:
                - group_id
                - title
  /group-rule-example:
    get:
      summary: 'Browse example rules.'
      operationId: browseExampleRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
  /group-rule/form:
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
  '/group-rule/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '8769223'
        required: true
        schema:
          type: string
  /group-rule/order:
    put:
      summary: 'Reorder rules.'
      operationId: reorderRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                group_id:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
  '/group-rule/{id}':
    put:
      summary: 'Update a group rule.'
      operationId: updateAGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: null
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: null
              required:
                - title
    delete:
      summary: 'Remove a rule.'
      operationId: removeARule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group rule.'
        example: '67'
        required: true
        schema:
          type: string
  /group-to-post:
    get:
      summary: ''
      operationId: getGroupToPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
  /group-unblock:
    delete:
      summary: ''
      operationId: deleteGroupUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                delete_activities:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
                - user_id
      security: []
  '/group/about-setting/{id}':
    get:
      summary: ''
      operationId: getGroupAboutSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '6'
        required: true
        schema:
          type: string
  '/group/approve/{id}':
    patch:
      summary: ''
      operationId: patchGroupApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '9508'
        required: true
        schema:
          type: string
  '/group/avatar/{id}':
    post:
      summary: ''
      operationId: postGroupAvatarId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
              required:
                - image
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '818'
        required: true
        schema:
          type: string
  /group/category:
    get:
      summary: 'Browse category.'
      operationId: browseCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /group/confirm-answer-question:
    put:
      summary: ''
      operationId: putGroupConfirmAnswerQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: null
                is_answer_membership_question:
                  type: boolean
                  description: ''
                  example: true
              required:
                - group_id
                - is_answer_membership_question
  /group/confirm-rule:
    put:
      summary: ''
      operationId: putGroupConfirmRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: null
                is_rule_confirmation:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_rule_confirmation
  '/group/cover/{id}':
    post:
      summary: ''
      operationId: postGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                position:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: ''
      operationId: deleteGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '4'
        required: true
        schema:
          type: string
  '/group/feature/{id}':
    patch:
      summary: ''
      operationId: patchGroupFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '8149828'
        required: true
        schema:
          type: string
  '/group/info-setting/{id}':
    get:
      summary: ''
      operationId: getGroupInfoSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '810'
        required: true
        schema:
          type: string
  /group/mention:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  '/group/moderation-right/{id}':
    get:
      summary: ''
      operationId: getGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the moderation right.'
        example: '94897'
        required: true
        schema:
          type: string
  '/group/pending-mode/{id}':
    patch:
      summary: ''
      operationId: patchGroupPendingModeId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: null
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pending mode.'
        example: '039789'
        required: true
        schema:
          type: string
  '/group/privacy/change-request/{id}':
    put:
      summary: ''
      operationId: putGroupPrivacyChangeRequestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the change request.'
        example: '4'
        required: true
        schema:
          type: string
  '/group/privacy/{id}':
    get:
      summary: ''
      operationId: getGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '1'
        required: true
        schema:
          type: string
  '/group/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchGroupSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '8'
        required: true
        schema:
          type: string
  '/group/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchGroupSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '65'
        required: true
        schema:
          type: string
  /group/suggestion:
    get:
      summary: ''
      operationId: getGroupSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
  '/group/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: null
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>exists</code> is <code>name</code>.'
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                reg_method:
                  type: number
                  description: ''
                  example: null
                vanity_url:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: null
                landing_page:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                text_description:
                  type: string
                  description: ''
                  example: null
                phone:
                  type: string
                  description: ''
                  example: null
              required:
                - landing_page
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group.'
        example: '38873'
        required: true
        schema:
          type: string
  /invite-code:
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: null
                refresh:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
      security: []
  '/invite-code/accept/{code}':
    post:
      summary: ''
      operationId: postInviteCodeAcceptCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: code
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/invite-code/verify/{code}':
    get:
      summary: ''
      operationId: getInviteCodeVerifyCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: code
        description: ''
        example: null
        required: true
        schema:
          type: string
  /search-group-member:
    get:
      summary: ''
      operationId: getSearchGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - group_id
      security: []
  /hashtag:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  /hashtag/suggestion:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  /invite:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                recipients:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                message:
                  type: string
                  description: ''
                  example: null
      security: []
  /invite/batch-delete:
    delete:
      summary: ''
      operationId: deleteInviteBatchDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
      security: []
  /invite/batch-resend:
    patch:
      summary: ''
      operationId: patchInviteBatchResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
      security: []
  '/invite/resend/{id}':
    put:
      summary: ''
      operationId: putInviteResendId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the resend.'
        example: '35330'
        required: true
        schema:
          type: string
  '/invite/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the invite.'
        example: '56021'
        required: true
        schema:
          type: string
  /live-video:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>my</code>, <code>friend</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>all_streaming</code>, or <code>my_streaming</code>.'
                  example: pending
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: recent
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                when:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
                  example: this_week
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: integer
                  description: ''
                  example: null
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: integer
                  description: ''
                  example: null
                duration:
                  type: string
                  description: 'Must be one of <code>longer</code> or <code>shorter</code>.'
                  example: longer
                streaming:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: null
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: true
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
  '/live-video/approve/{id}':
    patch:
      summary: 'Approve live video.'
      operationId: approveLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '5937'
        required: true
        schema:
          type: string
  '/live-video/callback/{provider}':
    post:
      summary: ''
      operationId: postLiveVideoCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/live-video/end-live/{id}':
    post:
      summary: ''
      operationId: postLiveVideoEndLiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the end live.'
        example: '9'
        required: true
        schema:
          type: string
  '/live-video/feature/{id}':
    patch:
      summary: 'Feature live video.'
      operationId: featureLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '184596'
        required: true
        schema:
          type: string
  /live-video/go-live:
    post:
      summary: ''
      operationId: postLiveVideoGoLive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: null
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: false
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
  '/live-video/off-notification/{id}':
    put:
      summary: ''
      operationId: putLiveVideoOffNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the off notification.'
        example: '39'
        required: true
        schema:
          type: string
  '/live-video/on-notification/{id}':
    put:
      summary: ''
      operationId: putLiveVideoOnNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the on notification.'
        example: '94824'
        required: true
        schema:
          type: string
  '/live-video/ping-streaming/{id}':
    get:
      summary: ''
      operationId: getLiveVideoPingStreamingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ping streaming.'
        example: '84'
        required: true
        schema:
          type: string
  '/live-video/ping-viewer/{id}':
    get:
      summary: ''
      operationId: getLiveVideoPingViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ping viewer.'
        example: '3288'
        required: true
        schema:
          type: string
  '/live-video/remove-viewer/{id}':
    put:
      summary: ''
      operationId: putLiveVideoRemoveViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the remove viewer.'
        example: '9'
        required: true
        schema:
          type: string
  '/live-video/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor live video in feed.'
      operationId: sponsorLiveVideoInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '2780'
        required: true
        schema:
          type: string
  '/live-video/sponsor/{id}':
    patch:
      summary: 'Sponsor live video.'
      operationId: sponsorLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '617'
        required: true
        schema:
          type: string
  '/live-video/update-viewer/{id}':
    put:
      summary: ''
      operationId: putLiveVideoUpdateViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update viewer.'
        example: '45'
        required: true
        schema:
          type: string
  '/live-video/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                status:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: null
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                duration:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                title:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the live video.'
        example: '327'
        required: true
        schema:
          type: string
  /marketplace:
    get:
      summary: 'Browse listing.'
      operationId: browseListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                country_iso:
                  type: string
                  description: ''
                  example: null
                bounds_west:
                  type: number
                  description: ''
                  example: null
                bounds_east:
                  type: number
                  description: ''
                  example: null
                bounds_south:
                  type: number
                  description: ''
                  example: null
                bounds_north:
                  type: number
                  description: ''
                  example: null
                price_from:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                price_to:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                is_featured:
                  type: string
                  description: ''
                  example: null
  /marketplace-category:
    get:
      summary: 'Browe category.'
      operationId: broweCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /marketplace-invite:
    get:
      summary: ''
      operationId: getMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    post:
      summary: ''
      operationId: postMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: array
                  description: 'This field is required when <code>user_ids</code> is present.'
                  example:
                    - null
                  items:
                    type: number
              required:
                - listing_id
  /marketplace-invite/invited-people:
    get:
      summary: ''
      operationId: getMarketplaceInviteInvitedPeople
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
              required:
                - listing_id
  /marketplace-invoice:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                listing_id:
                  type: number
                  description: ''
                  example: null
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:26'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:26'
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: null
              required:
                - id
                - payment_gateway
      security: []
  /marketplace-invoice/change:
    post:
      summary: ''
      operationId: postMarketplaceInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
              required:
                - id
      security: []
  '/marketplace-invoice/repayment/{id}':
    put:
      summary: ''
      operationId: putMarketplaceInvoiceRepaymentId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: null
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the repayment.'
        example: '5414301'
        required: true
        schema:
          type: string
  '/marketplace-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the marketplace invoice.'
        example: '1'
        required: true
        schema:
          type: string
  '/marketplace-photo/form/{id}':
    get:
      summary: ''
      operationId: getMarketplacePhotoFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '1'
        required: true
        schema:
          type: string
  '/marketplace-photo/{id}':
    put:
      summary: ''
      operationId: putMarketplacePhotoId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: ''
                  example: null
              required:
                - files
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the marketplace photo.'
        example: '692'
        required: true
        schema:
          type: string
  '/marketplace/approve/{id}':
    put:
      summary: 'Approve listing.'
      operationId: approveListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '98200278'
        required: true
        schema:
          type: string
  '/marketplace/feature/{id}':
    patch:
      summary: 'Feature listing.'
      operationId: featureListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '20'
        required: true
        schema:
          type: string
  '/marketplace/reopen/{id}':
    patch:
      summary: 'Reopen listing.'
      operationId: reopenListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the reopen.'
        example: '8'
        required: true
        schema:
          type: string
  '/marketplace/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor in feed.'
      operationId: sponsorInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '165'
        required: true
        schema:
          type: string
  '/marketplace/sponsor/{id}':
    patch:
      summary: 'Sponsor listing.'
      operationId: sponsorListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '5'
        required: true
        schema:
          type: string
  '/marketplace/{id}':
    get:
      summary: 'View listing.'
      operationId: viewListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    delete:
      summary: 'Remove listing.'
      operationId: removeListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the marketplace.'
        example: '147'
        required: true
        schema:
          type: string
  '/menu/{menuName}':
    get:
      summary: 'Show Menu.'
      operationId: showMenu
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Menu
      security: []
    parameters:
      -
        in: path
        name: menuName
        description: ''
        example: null
        required: true
        schema:
          type: string
  /mfa/service:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      security: []
  /mfa/user/auth:
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: null
                resolution:
                  type: string
                  description: ''
                  example: null
              required:
                - mfa_token
      security: []
    post:
      summary: 'Auth user.'
      operationId: authUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: null
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '857405'
              required:
                - password
                - verification_code
      security: []
  /mfa/user/service/setup:
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: null
                resolution:
                  type: string
                  description: ''
                  example: null
              required:
                - service
      security: []
  /music-genre:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /music/album:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                genre_id:
                  type: number
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
      security: []
  '/music/album/feature/{id}':
    patch:
      summary: ''
      operationId: patchMusicAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '6'
        required: true
        schema:
          type: string
  '/music/album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '404'
        required: true
        schema:
          type: string
  '/music/album/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '39'
        required: true
        schema:
          type: string
  '/music/album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchMusicAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '71'
        required: true
        schema:
          type: string
  '/music/album/{id}':
    get:
      summary: ''
      operationId: getMusicAlbumId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the album.'
        example: '325'
        required: true
        schema:
          type: string
  /music/genre:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /music/playlist:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                genre_id:
                  type: integer
                  description: ''
                  example: null
                category_id:
                  type: integer
                  description: ''
                  example: null
      security: []
    post:
      summary: ''
      operationId: postMusicPlaylist
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                description:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
  /music/playlist/add-song:
    post:
      summary: ''
      operationId: postMusicPlaylistAddSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                playlist_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - item_id
      security: []
  '/music/playlist/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '7'
        required: true
        schema:
          type: string
  '/music/playlist/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '39'
        required: true
        schema:
          type: string
  '/music/playlist/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchMusicPlaylistSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '85438'
        required: true
        schema:
          type: string
  '/music/playlist/{id}':
    get:
      summary: ''
      operationId: getMusicPlaylistId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                description:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: null
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the playlist.'
        example: '1'
        required: true
        schema:
          type: string
  /music/search:
    get:
      summary: ''
      operationId: getMusicSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
  /music/song:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                genre_id:
                  type: number
                  description: ''
                  example: null
                category_id:
                  type: integer
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: ''
      operationId: postMusicSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                description:
                  type: string
                  description: ''
                  example: null
                file:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: string
                  description: ''
                  example: null
                genres:
                  type: array
                  description: 'This field is required when <code>genres</code> is present.'
                  example:
                    - null
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
  '/music/song/approve/{id}':
    patch:
      summary: 'Approve song.'
      operationId: approveSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '2432'
        required: true
        schema:
          type: string
  '/music/song/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '7'
  '/music/song/feature/{id}':
    patch:
      summary: ''
      operationId: patchMusicSongFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '54'
        required: true
        schema:
          type: string
  '/music/song/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '8881'
        required: true
        schema:
          type: string
  '/music/song/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchMusicSongSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '1170'
        required: true
        schema:
          type: string
  '/music/song/{id}/remove-from-playlist/{playlist_id}':
    patch:
      summary: ''
      operationId: patchMusicSongIdRemoveFromPlaylistPlaylist_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '2'
        required: true
        schema:
          type: string
      -
        in: path
        name: playlist_id
        description: 'The ID of the playlist.'
        example: null
        required: true
        schema:
          type: string
  '/music/song/{id}/statistic/total-play':
    patch:
      summary: ''
      operationId: patchMusicSongIdStatisticTotalPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '4'
        required: true
        schema:
          type: string
  '/music/song/{id}':
    get:
      summary: ''
      operationId: getMusicSongId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '776'
        required: true
        schema:
          type: string
  /notification:
    get:
      summary: "Browse current user's notifications."
      operationId: browseCurrentUsersNotifications
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'The page number.'
                  example: 1
                limit:
                  type: integer
                  description: 'The max item per page.'
                  example: 4
  /notification/all:
    delete:
      summary: ''
      operationId: deleteNotificationAll
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
  /notification/markAllAsRead:
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
  '/notification/{id}':
    put:
      summary: 'Mark as read.'
      operationId: markAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    delete:
      summary: 'Delete notification.'
      operationId: deleteNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: '2046'
        required: true
        schema:
          type: string
  /page:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                users:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - name
      security: []
  /page-admin:
    get:
      summary: 'Display a listing of the admin resource.'
      operationId: displayAListingOfTheAdminResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                not_invite_role:
                  type: number
                  description: ''
                  example: null
                excluded_user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
      security: []
    post:
      summary: ''
      operationId: postPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    delete:
      summary: ''
      operationId: deletePageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                is_delete:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
                - user_id
                - is_delete
      security: []
  /page-block:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
                - user_id
      security: []
  /page-claim:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: number
                  description: ''
                  example: null
      security: []
  '/page-claim/resubmit/{id}':
    put:
      summary: ''
      operationId: putPageClaimResubmitId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the resubmit.'
        example: '0'
        required: true
        schema:
          type: string
  '/page-claim/{id}':
    get:
      summary: ''
      operationId: getPageClaimId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: null
                status:
                  type: integer
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page claim.'
        example: '8'
        required: true
        schema:
          type: string
  '/page-info/{id}':
    get:
      summary: 'Display the specified resource info.'
      operationId: displayTheSpecifiedResourceInfo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page info.'
        example: '4'
        required: true
        schema:
          type: string
  /page-integrated/order:
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - page_id
      security: []
  '/page-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page integrated.'
        example: '2178'
        required: true
        schema:
          type: string
  /page-invite:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - page_id
                - user_ids
      security: []
  '/page-invite/{id}':
    put:
      summary: 'Used to accept/decline a request to like a page.'
      operationId: usedToAcceptdeclineARequestToLikeAPage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  type: number
                  description: ''
                  example: null
              required:
                - accept
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page invite.'
        example: '314296'
        required: true
        schema:
          type: string
  /page-member:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                not_invite_role:
                  type: number
                  description: ''
                  example: null
                excluded_user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
      security: []
  /page-member/add-page-admin:
    post:
      summary: ''
      operationId: postPageMemberAddPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
  /page-member/cancel-invite:
    delete:
      summary: ''
      operationId: deletePageMemberCancelInvite
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                invite_type:
                  type: string
                  description: ''
                  example: null
              required:
                - page_id
                - user_id
      security: []
  /page-member/reassign-owner:
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: null
                users:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - page_id
      security: []
  /page-member/remove-page-admin:
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                is_delete:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
                - user_id
                - is_delete
      security: []
  /page-member/remove-page-member:
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
                - user_id
      security: []
  '/page-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page member.'
        example: '5342'
        required: true
        schema:
          type: string
  /page-to-post:
    get:
      summary: ''
      operationId: getPageToPost
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
  /page-unblock:
    delete:
      summary: ''
      operationId: deletePageUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
                - user_id
      security: []
  '/page/about-setting/{id}':
    get:
      summary: ''
      operationId: getPageAboutSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '403'
        required: true
        schema:
          type: string
  '/page/approve/{id}':
    patch:
      summary: ''
      operationId: patchPageApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '8621'
        required: true
        schema:
          type: string
  '/page/avatar/{id}':
    post:
      summary: ''
      operationId: postPageAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                image_crop:
                  type: string
                  description: ''
                  example: null
              required:
                - image_crop
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '66'
        required: true
        schema:
          type: string
  /page/category:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  '/page/cover/{id}':
    post:
      summary: ''
      operationId: postPageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                position:
                  type: string
                  description: ''
                  example: null
      security: []
    delete:
      summary: ''
      operationId: deletePageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '52'
        required: true
        schema:
          type: string
  '/page/feature/{id}':
    patch:
      summary: ''
      operationId: patchPageFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '4936'
        required: true
        schema:
          type: string
  '/page/info-setting/{id}':
    get:
      summary: ''
      operationId: getPageInfoSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '238'
        required: true
        schema:
          type: string
  /page/mention:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  '/page/privacy/{id}':
    get:
      summary: ''
      operationId: getPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: ''
      operationId: putPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '6'
        required: true
        schema:
          type: string
  /page/similar:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  '/page/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchPageSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '4806'
        required: true
        schema:
          type: string
  /page/suggestion:
    get:
      summary: ''
      operationId: getPageSuggestion
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  '/page/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                vanity_url:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                landing_page:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                phone:
                  type: string
                  description: ''
                  example: null
                external_link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.oconner.info/quae-debitis-modi-repellat-cum'
              required:
                - name
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '368'
        required: true
        schema:
          type: string
  /search-page-member:
    get:
      summary: ''
      operationId: getSearchPageMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - page_id
      security: []
  /paypal/notify:
    post:
      summary: notify.
      operationId: notify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - PayPal
      security: []
  /payment-gateway:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
  /payment-gateway/configuration:
    get:
      summary: ''
      operationId: getPaymentGatewayConfiguration
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
  '/payment-gateway/configuration-form/{driver}/{id}':
    get:
      summary: ''
      operationId: getPaymentGatewayConfigurationFormDriverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: driver
        description: ''
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the {driver}.'
        example: '402598743'
        required: true
        schema:
          type: string
  /payment-gateway/configuration-multiple:
    put:
      summary: ''
      operationId: putPaymentGatewayConfigurationMultiple
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
  '/payment-gateway/configuration/{id}':
    put:
      summary: ''
      operationId: putPaymentGatewayConfigurationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: null
                value:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the configuration.'
        example: '82947940'
        required: true
        schema:
          type: string
  /payment-order:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
  '/payment-order/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: null
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the payment order.'
        example: '6521388'
        required: true
        schema:
          type: string
  /photo:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                album_id:
                  type: number
                  description: ''
                  example: null
                group_id:
                  type: number
                  description: ''
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                tag:
                  type: string
                  description: ''
                  example: null
                feed_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
      security: []
  /photo-album:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
      security: []
  '/photo-album/approve/{id}':
    patch:
      summary: ''
      operationId: patchPhotoAlbumApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '54978'
        required: true
        schema:
          type: string
  /photo-album/create:
    get:
      summary: ''
      operationId: getPhotoAlbumCreate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
  '/photo-album/feature/{id}':
    patch:
      summary: ''
      operationId: patchPhotoAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '2'
        required: true
        schema:
          type: string
  '/photo-album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '90321'
        required: true
        schema:
          type: string
  '/photo-album/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchPhotoAlbumSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '7'
        required: true
        schema:
          type: string
  '/photo-album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchPhotoAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '536'
        required: true
        schema:
          type: string
  '/photo-album/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo album.'
        example: '5'
        required: true
        schema:
          type: string
  '/photo-album/{photo_album}/edit':
    get:
      summary: ''
      operationId: getPhotoAlbumPhoto_albumEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: photo_album
        description: ''
        example: null
        required: true
        schema:
          type: string
  /photo-category:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
      security: []
  '/photo-set/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo set.'
        example: '9115'
        required: true
        schema:
          type: string
  /photo-tag:
    get:
      summary: ''
      operationId: getPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
              required:
                - item_id
      security: []
    post:
      summary: ''
      operationId: postPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                tag_user_id:
                  type: number
                  description: ''
                  example: null
                px:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                py:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
              required:
                - item_id
                - tag_user_id
      security: []
  '/photo-tag/{id}':
    delete:
      summary: ''
      operationId: deletePhotoTagId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo tag.'
        example: '6'
        required: true
        schema:
          type: string
  '/photo/approve/{id}':
    patch:
      summary: ''
      operationId: patchPhotoApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '71433'
        required: true
        schema:
          type: string
  '/photo/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '601169'
  '/photo/feature/{id}':
    patch:
      summary: ''
      operationId: patchPhotoFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '504'
        required: true
        schema:
          type: string
  '/photo/form/{id}':
    get:
      summary: ''
      operationId: getPhotoFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '80'
  '/photo/parent-avatar/{id}':
    put:
      summary: ''
      operationId: putPhotoParentAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the parent avatar.'
        example: '3'
        required: true
        schema:
          type: string
  '/photo/parent-cover/{id}':
    put:
      summary: ''
      operationId: putPhotoParentCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the parent cover.'
        example: '3'
        required: true
        schema:
          type: string
  '/photo/profile-avatar/{id}':
    put:
      summary: ''
      operationId: putPhotoProfileAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the profile avatar.'
        example: '6'
        required: true
        schema:
          type: string
  '/photo/profile-cover/{id}':
    put:
      summary: ''
      operationId: putPhotoProfileCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: null
                position:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the profile cover.'
        example: '9'
        required: true
        schema:
          type: string
  '/photo/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchPhotoSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '1'
        required: true
        schema:
          type: string
  '/photo/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchPhotoSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '0701'
        required: true
        schema:
          type: string
  '/photo/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: null
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                album:
                  type: number
                  description: ''
                  example: null
                tags:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                text:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: null
                    lat:
                      type: number
                      description: ''
                      example: null
                    lng:
                      type: number
                      description: ''
                      example: null
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo.'
        example: '7'
        required: true
        schema:
          type: string
  '/photo/{photo}/edit':
    get:
      summary: ''
      operationId: getPhotoPhotoEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: photo
        description: 'The photo.'
        example: null
        required: true
        schema:
          type: string
  /poll:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
      security: []
  /poll-result:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'This field is required when <code>answer_id</code> is not present. Must be at least 1.'
                  example: null
                answer_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - poll_id
                - answers
      security: []
  '/poll-result/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the poll result.'
        example: '3336'
        required: true
        schema:
          type: string
  '/poll/approve/{id}':
    patch:
      summary: ''
      operationId: patchPollApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '7'
        required: true
        schema:
          type: string
  '/poll/feature/{id}':
    patch:
      summary: ''
      operationId: patchPollFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '208901'
        required: true
        schema:
          type: string
  /poll/integration-form:
    get:
      summary: ''
      operationId: getPollIntegrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
  /poll/search-form:
    get:
      summary: ''
      operationId: getPollSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
  '/poll/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchPollSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '1'
        required: true
        schema:
          type: string
  '/poll/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchPollSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '1'
        required: true
        schema:
          type: string
  /poll/status-form:
    get:
      summary: ''
      operationId: getPollStatusForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
  '/poll/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: ''
                  example: null
                answers:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  items:
                    type: number
                item_id:
                  type: number
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties: []
                text:
                  type: string
                  description: ''
                  example: null
                background:
                  type: string
                  description: 'Must have 6 characters.'
                  example: null
                percentage:
                  type: string
                  description: 'Must have 6 characters.'
                  example: null
                border:
                  type: string
                  description: 'Must have 6 characters.'
                  example: null
                enable_close:
                  type: number
                  description: ''
                  example: null
                close_time:
                  type: string
                  description: ''
                  example: null
                is_multiple:
                  type: number
                  description: ''
                  example: null
                public_vote:
                  type: number
                  description: ''
                  example: null
                randomize:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                has_banner:
                  type: number
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the poll.'
        example: '1244'
        required: true
        schema:
          type: string
  /quiz:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
      security: []
  /quiz-question/view-plays:
    get:
      summary: ''
      operationId: getQuizQuestionViewPlays
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: number
                  description: ''
                  example: null
              required:
                - question_id
      security: []
  /quiz-result:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - quiz_id
      security: []
  /quiz-result/view-individual-play:
    get:
      summary: ''
      operationId: getQuizResultViewIndividualPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
              required:
                - quiz_id
                - user_id
      security: []
  '/quiz/approve/{id}':
    patch:
      summary: ''
      operationId: patchQuizApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '07478'
        required: true
        schema:
          type: string
  '/quiz/feature/{id}':
    patch:
      summary: ''
      operationId: patchQuizFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '705627'
        required: true
        schema:
          type: string
  /quiz/search-form:
    get:
      summary: ''
      operationId: getQuizSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
  '/quiz/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchQuizSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '17'
        required: true
        schema:
          type: string
  '/quiz/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchQuizSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '60283622'
        required: true
        schema:
          type: string
  '/quiz/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the quiz.'
        example: '3'
        required: true
        schema:
          type: string
  /like:
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                react_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
              required:
                - item_id
                - item_type
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                reaction_id:
                  type: number
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  /like-tabs:
    get:
      summary: ''
      operationId: getLikeTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  '/like/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the like.'
        example: '626511441'
        required: true
        schema:
          type: string
  /preaction:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
  /preaction/get-reacted-lists:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                react_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
              required:
                - item_id
                - item_type
  /preaction/reaction-tabs:
    get:
      summary: ''
      operationId: getPreactionReactionTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  /reaction:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
  /report:
    post:
      summary: 'Store a new report.'
      operationId: storeANewReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: null
                feedback:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - reason
                - item_id
                - item_type
  /report-owner:
    get:
      summary: 'Browse reports.'
      operationId: browseReports
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - owner_id
    post:
      summary: 'Post a report to owner.'
      operationId: postAReportToOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: null
                feedback:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  /report-owner/form:
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  '/report-owner/reporters/{id}':
    get:
      summary: ''
      operationId: getReportOwnerReportersId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the reporter.'
        example: '8765'
        required: true
        schema:
          type: string
  '/report-owner/{id}':
    put:
      summary: 'Update a report.'
      operationId: updateAReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keep_post:
                  type: string
                  description: ''
                  example: null
              required:
                - keep_post
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the report owner.'
        example: '5'
        required: true
        schema:
          type: string
  /report/form:
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  /report/form/mobile:
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  /report/reason:
    get:
      summary: 'Browse report reasons.'
      operationId: browseReportReasons
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /seo/meta:
    get:
      summary: ''
      operationId: getSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    post:
      summary: ''
      operationId: postSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
  '/seo/meta/{metaName}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    parameters:
      -
        in: path
        name: metaName
        description: 'Page meta name.'
        example: blog.browse.home
        required: true
        schema:
          type: string
  /saveditems:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                collection_id:
                  type: number
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                open:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                type:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - item_id
                - item_type
  /saveditems-collection:
    get:
      summary: 'Browse list.'
      operationId: browseList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: null
                saved_id:
                  type: number
                  description: ''
                  example: null
    post:
      summary: 'Create list.'
      operationId: createList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - privacy
  '/saveditems-collection/add-friend/{id}':
    post:
      summary: ''
      operationId: postSaveditemsCollectionAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '45152'
        required: true
        schema:
          type: string
  /saveditems-collection/form:
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
  '/saveditems-collection/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '587'
        required: true
        schema:
          type: string
  '/saveditems-collection/item/{id}':
    get:
      summary: ''
      operationId: getSaveditemsCollectionItemId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: null
                saved_id:
                  type: number
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '53897'
        required: true
        schema:
          type: string
  '/saveditems-collection/leave-collection/{id}':
    delete:
      summary: ''
      operationId: deleteSaveditemsCollectionLeaveCollectionId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the leave collection.'
        example: '6'
        required: true
        schema:
          type: string
  '/saveditems-collection/remove-member/{id}':
    delete:
      summary: ''
      operationId: deleteSaveditemsCollectionRemoveMemberId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - user_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the remove member.'
        example: '0'
        required: true
        schema:
          type: string
  '/saveditems-collection/view-friend/{id}':
    get:
      summary: ''
      operationId: getSaveditemsCollectionViewFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the view friend.'
        example: '594'
        required: true
        schema:
          type: string
  '/saveditems-collection/{id}':
    get:
      summary: 'View list.'
      operationId: viewList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update list.'
      operationId: updateList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - name
    delete:
      summary: 'Remove list.'
      operationId: removeList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the saveditems collection.'
        example: '27088'
        required: true
        schema:
          type: string
  /saveditems/collection:
    put:
      summary: 'Move item.'
      operationId: moveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                collection_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - item_id
  '/saveditems/collection/{list_id}/save/{saved_id}':
    delete:
      summary: ''
      operationId: deleteSaveditemsCollectionList_idSaveSaved_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: list_id
        description: 'The ID of the list.'
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: saved_id
        description: 'The ID of the saved.'
        example: null
        required: true
        schema:
          type: string
  /saveditems/get-tab:
    get:
      summary: 'Browse tabs.'
      operationId: browseTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
  '/saveditems/read/{id}':
    patch:
      summary: 'Mark as opened.'
      operationId: markAsOpened
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saved_id:
                  type: number
                  description: ''
                  example: null
                status:
                  type: number
                  description: ''
                  example: null
                collection_id:
                  type: number
                  description: ''
                  example: null
              required:
                - saved_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the read.'
        example: '66'
        required: true
        schema:
          type: string
  /saveditems/save:
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - item_id
                - item_type
  /saveditems/unsave:
    delete:
      summary: 'Unsave item.'
      operationId: unsaveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  '/saveditems/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_unopened:
                  type: number
                  description: ''
                  example: null
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
    delete:
      summary: 'Remove item.'
      operationId: removeItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the saveditem.'
        example: '1'
        required: true
        schema:
          type: string
  /search:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                from:
                  type: string
                  description: ''
                  example: null
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 2.'
                  example: null
                last_search_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
              required:
                - q
      security: []
  /search/group:
    get:
      summary: ''
      operationId: getSearchGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: null
                owner_id:
                  type: number
                  description: ''
                  example: null
                from:
                  type: string
                  description: ''
                  example: null
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
              required:
                - q
      security: []
  /search/hashtag/trending:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: integer
                  description: ''
                  example: null
      security: []
  /search/suggestion:
    get:
      summary: 'View Suggestions.'
      operationId: viewSuggestions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
      security: []
  '/socialite/callback/{provider}':
    get:
      summary: ''
      operationId: getSocialiteCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/socialite/login/{provider}':
    get:
      summary: ''
      operationId: getSocialiteLoginProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: ''
                  example: null
              required:
                - provider
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: null
        required: true
        schema:
          type: string
  /static-page:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
  '/static-page/page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '2599'
        required: true
        schema:
          type: string
  '/static-page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the static page.'
        example: '82'
        required: true
        schema:
          type: string
  /bgs-background:
    get:
      summary: 'Get background.'
      operationId: getBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
              required:
                - collection_id
  /pstatusbg-collection:
    get:
      summary: 'Browse collection.'
      operationId: browseCollection
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
    post:
      summary: 'Create background.'
      operationId: createBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: null
                is_active:
                  type: number
                  description: ''
                  example: null
                is_default:
                  type: number
                  description: ''
                  example: null
                background_temp_file:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
              required:
                - title
  '/pstatusbg-collection/{id}':
    get:
      summary: 'View background.'
      operationId: viewBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pstatusbg collection.'
        example: '103'
        required: true
        schema:
          type: string
  /sticker/recent:
    get:
      summary: ''
      operationId: getStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
    post:
      summary: ''
      operationId: postStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sticker_id:
                  type: number
                  description: ''
                  example: null
              required:
                - sticker_id
  /sticker/sticker-set:
    get:
      summary: 'Browse sticker.'
      operationId: browseSticker
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  '/sticker/sticker-set/active/{sticker_set}':
    patch:
      summary: 'Active sticker set.'
      operationId: activeStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: number
                  description: ''
                  example: null
              required:
                - active
    parameters:
      -
        in: path
        name: sticker_set
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/sticker/sticker-set/default/{sticker_set}':
    patch:
      summary: ''
      operationId: patchStickerStickerSetDefaultSticker_set
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: sticker_set
        description: ''
        example: null
        required: true
        schema:
          type: string
  /sticker/sticker-set/user:
    post:
      summary: ''
      operationId: postStickerStickerSetUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
              required:
                - id
  '/sticker/sticker-set/user/{id}':
    delete:
      summary: ''
      operationId: deleteStickerStickerSetUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '26'
        required: true
        schema:
          type: string
  '/sticker/sticker-set/{id}':
    get:
      summary: 'View sticker set.'
      operationId: viewStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sticker set.'
        example: '092'
        required: true
        schema:
          type: string
  '/sticker/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sticker.'
        example: '6315011'
        required: true
        schema:
          type: string
  /subscription-comparison:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
  /subscription-invoice:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                renew_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: null
              required:
                - id
                - payment_gateway
      security: []
  '/subscription-invoice/cancel-form/{id}':
    get:
      summary: ''
      operationId: getSubscriptionInvoiceCancelFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel form.'
        example: '4'
        required: true
        schema:
          type: string
  '/subscription-invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchSubscriptionInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_id:
                  type: number
                  description: ''
                  example: null
              required:
                - reason_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '12781'
        required: true
        schema:
          type: string
  '/subscription-invoice/change-invoice/{id}':
    post:
      summary: ''
      operationId: postSubscriptionInvoiceChangeInvoiceId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the change invoice.'
        example: '55'
        required: true
        schema:
          type: string
  '/subscription-invoice/payment-form/{id}':
    get:
      summary: ''
      operationId: getSubscriptionInvoicePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_type:
                  type: string
                  description: ''
                  example: null
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '9'
        required: true
        schema:
          type: string
  '/subscription-invoice/renew-form/{id}':
    get:
      summary: ''
      operationId: getSubscriptionInvoiceRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '9'
        required: true
        schema:
          type: string
  '/subscription-invoice/renew-method-form/{id}':
    post:
      summary: ''
      operationId: postSubscriptionInvoiceRenewMethodFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: null
                action_type:
                  type: string
                  description: ''
                  example: null
              required:
                - id
                - payment_gateway
                - action_type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew method form.'
        example: '0'
        required: true
        schema:
          type: string
  '/subscription-invoice/renew/{id}':
    patch:
      summary: ''
      operationId: patchSubscriptionInvoiceRenewId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: null
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew.'
        example: '9'
        required: true
        schema:
          type: string
  '/subscription-invoice/upgrade/{id}':
    patch:
      summary: ''
      operationId: patchSubscriptionInvoiceUpgradeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: null
                action_type:
                  type: string
                  description: ''
                  example: null
              required:
                - payment_gateway
                - action_type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the upgrade.'
        example: '2'
        required: true
        schema:
          type: string
  '/subscription-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscription invoice.'
        example: '799171864'
        required: true
        schema:
          type: string
  /subscription-package:
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
      security: []
  '/subscription-package/payment-form/{id}':
    get:
      summary: ''
      operationId: getSubscriptionPackagePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '60'
        required: true
        schema:
          type: string
  '/subscription-package/renew-form/{id}':
    post:
      summary: ''
      operationId: postSubscriptionPackageRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: null
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '2'
        required: true
        schema:
          type: string
  '/subscription-package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscription package.'
        example: '69'
        required: true
        schema:
          type: string
  '/layout/snippet/history/purge/{name}':
    post:
      summary: ''
      operationId: postLayoutSnippetHistoryPurgeName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: name
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/layout/snippet/history/{name}':
    get:
      summary: ''
      operationId: getLayoutSnippetHistoryName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: name
        description: ''
        example: null
        required: true
        schema:
          type: string
  /layout/snippet/ping:
    get:
      summary: ''
      operationId: getLayoutSnippetPing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
  /layout/snippet/publish:
    post:
      summary: ''
      operationId: postLayoutSnippetPublish
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
  /layout/snippet/purge:
    post:
      summary: ''
      operationId: postLayoutSnippetPurge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
  '/layout/snippet/revert/{id}':
    post:
      summary: ''
      operationId: postLayoutSnippetRevertId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the revert.'
        example: '481'
        required: true
        schema:
          type: string
  /layout/snippet/theme:
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: null
                name:
                  type: string
                  description: ''
                  example: null
                variant:
                  type: string
                  description: ''
                  example: null
                files:
                  type: object
                  description: ''
                  example: null
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - files
      security: []
  /layout/snippet/variant:
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: null
                variant:
                  type: string
                  description: ''
                  example: null
                files:
                  type: object
                  description: ''
                  example: null
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - variant
                - files
      security: []
  /account/blocked-user:
    get:
      summary: ''
      operationId: getAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    post:
      summary: ''
      operationId: postAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: null
              required:
                - user_id
  '/account/blocked-user/{id}':
    delete:
      summary: ''
      operationId: deleteAccountBlockedUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the blocked user.'
        example: '315303'
        required: true
        schema:
          type: string
  /account/invisible:
    get:
      summary: ''
      operationId: getAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    put:
      summary: ''
      operationId: putAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invisible:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: null
              required:
                - invisible
  /account/item-privacy:
    put:
      summary: ''
      operationId: putAccountItemPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  '/account/item-privacy/{id}':
    get:
      summary: ''
      operationId: getAccountItemPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
              required:
                - id
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '2795'
  /account/notification:
    get:
      summary: ''
      operationId: getAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ''
                  example: null
    put:
      summary: ''
      operationId: putAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                module_id:
                  type: string
                  description: ''
                  example: null
                value:
                  type: integer
                  description: ''
                  example: null
                var_name:
                  type: string
                  description: ''
                  example: null
                channel:
                  type: string
                  description: ''
                  example: null
              required:
                - channel
  /account/profile-menu:
    put:
      summary: ''
      operationId: putAccountProfileMenu
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  '/account/profile-menu/{id}':
    get:
      summary: ''
      operationId: getAccountProfileMenuId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
              required:
                - id
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '244'
  /account/profile-privacy:
    put:
      summary: ''
      operationId: putAccountProfilePrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  '/account/profile-privacy/{id}':
    get:
      summary: ''
      operationId: getAccountProfilePrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
              required:
                - id
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '628'
  /account/setting:
    get:
      summary: ''
      operationId: getAccountSetting
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /account/timezone:
    get:
      summary: ''
      operationId: getAccountTimezone
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /auth/logout:
    get:
      summary: ''
      operationId: getAuthLogout
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /auth/profile:
    get:
      summary: ''
      operationId: getAuthProfile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /me:
    get:
      summary: 'View current logged in user.'
      operationId: viewCurrentLoggedInUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: null
  /register:
    post:
      summary: MetaFox
      operationId: metaFox
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: sporer.johann@example.com
                password:
                  type: string
                  description: ''
                  example: null
                full_name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 25 characters.'
                  example: null
                user_name:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 25 characters.'
                  example: null
                agree:
                  type: boolean
                  description: 'Must be accepted.'
                  example: true
                captcha:
                  type: string
                  description: ''
                  example: null
                code:
                  type: string
                  description: ''
                  example: null
              required:
                - email
                - password
                - full_name
                - user_name
                - agree
      security: []
  /user:
    get:
      summary: 'Browse user.'
      operationId: browseUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                gender:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: null
                country_state_id:
                  type: string
                  description: ''
                  example: null
                city:
                  type: string
                  description: ''
                  example: null
                city_code:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
  /user/account:
    get:
      summary: ''
      operationId: getUserAccount
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/currency-form:
    get:
      summary: ''
      operationId: getUserAccountCurrencyForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/email-form:
    get:
      summary: ''
      operationId: getUserAccountEmailForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/language-form:
    get:
      summary: ''
      operationId: getUserAccountLanguageForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/name-form:
    get:
      summary: ''
      operationId: getUserAccountNameForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/password-form:
    get:
      summary: ''
      operationId: getUserAccountPasswordForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/review-form:
    get:
      summary: ''
      operationId: getUserAccountReviewForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/timezone-form:
    get:
      summary: ''
      operationId: getUserAccountTimezoneForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/account/username-form:
    get:
      summary: ''
      operationId: getUserAccountUsernameForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  /user/activity:
    get:
      summary: ''
      operationId: getUserActivity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
  '/user/avatar/{user}':
    post:
      summary: 'Upload avatar.'
      operationId: uploadAvatar
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                image_crop:
                  type: string
                  description: ''
                  example: null
              required:
                - image_crop
    parameters:
      -
        in: path
        name: user
        description: ''
        example: null
        required: true
        schema:
          type: string
  /user/ban:
    post:
      summary: 'Ban user.'
      operationId: banUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
                day:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                reason:
                  type: string
                  description: ''
                  example: null
                return_user_group:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
              required:
                - user_id
                - day
                - return_user_group
  '/user/ban/{id}':
    delete:
      summary: 'Un-ban user.'
      operationId: unBanUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ban.'
        example: '6'
        required: true
        schema:
          type: string
  /user/city:
    get:
      summary: ''
      operationId: getUserCity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: null
  /user/country/state:
    get:
      summary: ''
      operationId: getUserCountryState
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: null
  '/user/cover/{user}':
    post:
      summary: 'Update cover.'
      operationId: updateCover
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                position:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: user
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/user/feature/{id}':
    patch:
      summary: ''
      operationId: patchUserFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '06'
        required: true
        schema:
          type: string
  /user/form:
    get:
      summary: 'Get user registration form.'
      operationId: getUserRegistrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
  '/user/info/{user}':
    get:
      summary: ''
      operationId: getUserInfoUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: user
        description: ''
        example: null
        required: true
        schema:
          type: string
  /user/login:
    post:
      summary: /login.
      operationId: login
      description: 'Logged in by email and password.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The email of user.'
                  example: metafoxtest1@phpfox.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: '12345678'
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - username
                - password
  '/user/password/edit/{resolution}':
    post:
      summary: ''
      operationId: postUserPasswordEditResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - token
                - user_id
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/user/password/request-method/{resolution}':
    post:
      summary: ''
      operationId: postUserPasswordRequestMethodResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ywolf@example.com
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - email
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/user/password/request-verify/{resolution}':
    post:
      summary: ''
      operationId: postUserPasswordRequestVerifyResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_method:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
              required:
                - request_method
                - user_id
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/user/password/{resolution}':
    patch:
      summary: ''
      operationId: patchUserPasswordResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: null
                token:
                  type: string
                  description: ''
                  example: null
                new_password:
                  type: string
                  description: ''
                  example: null
                new_password_confirmation:
                  type: string
                  description: 'This field is required when <code>new_password</code> is present.  The value and <code>new_password</code> must match.'
                  example: null
              required:
                - user_id
                - token
                - new_password
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /user/profile/form:
    get:
      summary: ''
      operationId: getUserProfileForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
  /user/profile/gender:
    get:
      summary: ''
      operationId: getUserProfileGender
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
                is_custom:
                  type: number
                  description: ''
                  example: null
  '/user/profile/{id}':
    put:
      summary: ''
      operationId: putUserProfileId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                birthday:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-26T10:00:28'
                postal_code:
                  type: string
                  description: ''
                  example: null
                country_iso:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: null
                country_state_id:
                  type: string
                  description: ''
                  example: null
                country_state:
                  type: object
                  description: ''
                  example: null
                  properties:
                    value:
                      type: string
                      description: ''
                      example: null
                country_city_code:
                  type: string
                  description: ''
                  example: null
                gender:
                  type: number
                  description: ''
                  example: null
                custom_gender:
                  type: number
                  description: 'This field is required when <code>gender</code> is <code>0</code>.'
                  example: null
                relation:
                  type: number
                  description: ''
                  example: null
                relation_with:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                bio:
                  type: string
                  description: ''
                  example: null
                about_me:
                  type: string
                  description: ''
                  example: null
                interest:
                  type: string
                  description: ''
                  example: null
                hobbies:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '8'
  '/user/quick-preview/{id}':
    get:
      summary: ''
      operationId: getUserQuickPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the quick preview.'
        example: '380'
        required: true
        schema:
          type: string
  /user/refresh:
    post:
      summary: ''
      operationId: postUserRefresh
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: ''
                  example: null
              required:
                - refresh_token
  '/user/remove-cover/{id}':
    put:
      summary: ''
      operationId: putUserRemoveCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '6'
  /user/shortcut:
    get:
      summary: 'Browse shortcuts.'
      operationId: browseShortcuts
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  /user/shortcut/edit:
    get:
      summary: 'View shortcut.'
      operationId: viewShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
  '/user/shortcut/manage/{id}':
    put:
      summary: 'Update shortcut.'
      operationId: updateShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sort_type:
                  type: string
                  description: ''
                  example: null
              required:
                - sort_type
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the manage.'
        example: '9'
        required: true
        schema:
          type: string
  '/user/simple/{user}':
    get:
      summary: 'View minimized user information.'
      operationId: viewMinimizedUserInformation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: user
        description: ''
        example: null
        required: true
        schema:
          type: string
  '/user/verify/email/{hash}':
    post:
      summary: ''
      operationId: postUserVerifyEmailHash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: hash
        description: ''
        example: null
        required: true
        schema:
          type: string
  /user/verify/resend:
    post:
      summary: ''
      operationId: postUserVerifyResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: uriah.ward@example.org
              required:
                - email
      security: []
  '/user/{id}/item-stats':
    get:
      summary: ''
      operationId: getUserIdItemStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: null
                item_id:
                  type: number
                  description: ''
                  example: null
              required:
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '29'
        required: true
        schema:
          type: string
  '/user/{id}':
    get:
      summary: 'View user.'
      operationId: viewUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    delete:
      summary: 'Delete user.'
      operationId: deleteUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '6'
        required: true
        schema:
          type: string
  /video:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                view:
                  type: string
                  description: ''
                  example: null
                sort:
                  type: string
                  description: ''
                  example: null
                sort_type:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: null
                owner_id:
                  type: integer
                  description: ''
                  example: null
                user_id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                limit:
                  type: number
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: null
    post:
      summary: 'Create a resource.'
      operationId: createAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                file:
                  type: string
                  description: 'This field is required when <code>video_url</code> is not present.'
                  example: null
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: null
                video_url:
                  type: string
                  description: 'This field is required when <code>file</code> is not present.  Must be a valid URL.'
                  example: 'http://runte.com/iste-rerum-quia-minima-quam.html'
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - title
                - privacy
  '/video/approve/{id}':
    patch:
      summary: ''
      operationId: patchVideoApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '87709'
        required: true
        schema:
          type: string
  '/video/callback/{provider}':
    post:
      summary: ''
      operationId: postVideoCallbackProvider
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: null
        required: true
        schema:
          type: string
  /video/category:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: null
                q:
                  type: string
                  description: ''
                  example: null
                level:
                  type: number
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: null
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: null
                name_url:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: null
                is_active:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: null
                ordering:
                  type: number
                  description: 'Must be at least 0.'
                  example: null
                parent_id:
                  type: number
                  description: ''
                  example: null
              required:
                - name
  '/video/category/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: '1336417'
        required: true
        schema:
          type: string
  '/video/feature/{id}':
    patch:
      summary: ''
      operationId: patchVideoFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '25'
        required: true
        schema:
          type: string
  '/video/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchVideoSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '5'
        required: true
        schema:
          type: string
  '/video/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchVideoSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: null
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '25660'
        required: true
        schema:
          type: string
  '/video/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: null
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: null
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - privacy
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '53531042'
        required: true
        schema:
          type: string
tags:
  -
    name: 'Activity Point'
    description: "App name: Activity Point\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Advertise
    description: "App name: Advertise\nVersion: 5.0.3\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Announcement
    description: "App name: Announcement\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Attachments
    description: "App name: Attachments\nVersion: 5.0.0\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Authorization
    description: "App name: Authorization\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Blog
    description: "App name: Blog\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Captcha
    description: "App name: Captcha\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Chat
    description: "App name: Chat\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: ChatPlus
    description: "App name: ChatPlus\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Comment
    description: "App name: Comment\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Contact
    description: "App name: Contact\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Core
    description: "App name: Core\nVersion: 5.1.3\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Event
    description: "App name: Event\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Feed
    description: "App name: Feed\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Follow
    description: "App name: Follow\nVersion: 5.0.3\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Forum
    description: "App name: Forum\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Friend
    description: "App name: Friend\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Group
    description: "App name: Group\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Hashtags
    description: "App name: Hashtags\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Invitations
    description: "App name: Invitations\nVersion: 5.0.1\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: 'Live Video'
    description: "App name: Live Video\nVersion: 5.0.4\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Marketplace
    description: "App name: Marketplace\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Menu
    description: "App name: Menu\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: 'Multi-Factor Authentication'
    description: "App name: Multi-Factor Authentication\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Music
    description: "App name: Music\nVersion: 5.0.3\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Notification
    description: "App name: Notification\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Page
    description: "App name: Page\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: PayPal
    description: "App name: PayPal\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: 'Payment Gateway'
    description: "App name: Payment Gateway\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Photo
    description: "App name: Photo\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Poll
    description: "App name: Poll\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Quiz
    description: "App name: Quiz\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Reactions
    description: "App name: Reactions\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Report
    description: "App name: Report\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: SEO
    description: "App name: SEO\nVersion: 5.0.5\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Saved
    description: "App name: Saved\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Search
    description: "App name: Search\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: 'Social Connect'
    description: "App name: Social Connect\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: 'Static Page'
    description: "App name: Static Page\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: 'Status Background'
    description: "App name: Status Background\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Sticker
    description: "App name: Sticker\nVersion: 5.1.3\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Subscription
    description: "App name: Subscription\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Theme
    description: "App name: Theme\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: User
    description: "App name: User\nVersion: 5.1.3\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
  -
    name: Video
    description: "App name: Video\nVersion: 5.0.7\nAuthor: phpFox\nUpdated at: Jul 26, 2023"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
